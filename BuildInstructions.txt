*********************************************************************************
* Do you really need to build this???
*
* Note, that if you only need to USE the library you don’t need to build it.
* there are current releases maintained on the enclave shared drive at:
*
*   /Volumes/shares/Groups/Tech Team/Current Projects/FIPS/release/FCIDS (IOS) 
*   and
*   /Volumes/shares/Groups/Tech Team/Current Projects/FIPS/release/FCADS  (Android)
*
*   follow the procedure in HowToInstallRelease.txt
*
*
*  You will need to build this only if you need to change the internal workings
*  of the API’s it provides
*
*********************************************************************************

Notes:

	Note that buildall.sh builds all of the openssl/fips files then puts the results in directory specifyed in setEnvOpenSslFiles.sh 
	(default: /usr/local/ssl/Release-iphoneos)



Tools Necessary for Build
=========================
	MAC OS-X
	Xcode 4.x 
	Xcode 5.x (or 6.x)
	Note: you need both sets of tools. The simulator uses 5.x but due to a compiler issue the device needs 4.x

Steps:
======
	1. Download files
	2. Build files
	3. Test result

******************
1. Download Files
******************

Retrieve source files
================================


	1a. Clone the T2 fcids project from git:
	----------------------------------------
		git clone git.t2.local:/git/mobile/crossplatform/fcids.git
		cd fcids

		Results: 
		========
			fcids/dev/supplemental
				.. files
			fcids/doc
				.. files

		Note: After you've cloned fcids.git, you can do a build and it will offer co copy the unofficial openssl
		      and sqlcipher files of they are missing.

	1b. Obtain fips/opsnssl files copy them to fcads/dev
	-----------------------------------------------------

		Option 1 (the official way):
		----------------------------
			Obtain the official disk and copy openssl-fips-??tar.gz, and  openssl-1.0.1?.tar.gz to the fcids/dev, and fcids/devSim directory"


		Option 2:
		--------
  			Copy the files from the local distribution (use command: cp localFipsSslFiles/*.gz ./dev, and cp localFipsSslFiles/*.gz ./devSim"
  			(Alternately, the main build file will offer to copy these files for you if they are missing)


		Results: 
		========
			fcids/dev
				openssl-fips-??tar.gz	
				openssl-1.0.1?.tar.gz


	1c. Obtain sqlcipher source files
	---------------------------------

		Option 1 (the official way):
		----------------------------
		cd fcids
		git clone git.t2.local:/git/mobile/crossplatform/sqlcipher.git

		Option 2:
		---------
		Copy the files from the local distribution (use command cp -r localFipsSslFiles/sqlcipher ./)
		(Alternately, the main build file will offer to copy these files for you if they are missing)



	Results: 
	========
		fcids/sqlcipher
			.. Lots of files and directories (~2.9 Gb)


******************
2. BuildFiles
******************
	2a. Confirm the correct openssl and fips files are specified for the build in the file setEnvOpenSslFiles.sh
	    Currently the defauls are: openssl-1.0.1f, openssl-fips-2.0.2

	2b. Execute main build file: sudo ./buildAll.sh


******************
3. Test on IOS simulator and device
******************
	See fips-pi, and testCordova below




******************
Appendix A - IOS test programs
******************

	1) fips-pi 
		(fcids/test/fips-pi/fips-pi.xcodeproj)
		Native IOS program that links in crypto library at
			/usr/local/ssl/Release-iphoneos/libcrypto.a (default location for t2 build)
		Presents ui that allows uses to manuall enter/edit fips mode
			User nees to examine log file (in xcode) to make sure there are no errors when switching into and out of fips mode.
	2) testCordova
		(fcids/test/testcordova/platforms/ios/testcordova.xcodeproj)
		Coirdova program that links in crypto library at
			/usr/local/ssl/Release-iphoneos/libcrypto.a (default location for t2 build)
		Does very basic db insert to verify operation of T2's IOS portion of Cordova-SqlcipherPlugin


